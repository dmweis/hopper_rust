var searchIndex = JSON.parse('{\
"hopper":{"doc":"","t":[3,11,11,11,11,12,11,11,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,12,11],"n":["Args","as_any","as_any_mut","augment_args","augment_args_for_update","body_config","borrow","borrow_mut","config","deref","deref_mut","drop","dynamixel_port","face_port","from","from_arg_matches","from_arg_matches_mut","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_app","into_app_for_update","is_in_subset","lidar","log_path","main","to_subset","to_subset_unchecked","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","verbose","vzip"],"q":["hopper","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Hopper body controller","","","","","Sets path to body config file (.yaml) If unset uses â€¦","","","application configuration","","","","Serial port name of the dynamixel port","hopper face serial port","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","hopper lidar serial port","Path for external log file. If no give will only log to out","","","","","","","","","Sets the level of verbosity",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1],"f":[null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["command",6]],["command",6]],[[["command",6]],["command",6]],null,[[["",0]],["",0]],[[["",0]],["",0]],null,[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],null,null,[[]],[[["argmatches",3]],["result",4,[["args",3],["error",3]]]],[[["argmatches",3]],["result",4,[["args",3],["error",3]]]],[[["",0]]],[[],["usize",0]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["command",6]],[[],["command",6]],[[["",0]],["bool",0]],null,null,[[],["result",6]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["args",3],["argmatches",3]],["result",4,[["error",3]]]],[[["args",3],["argmatches",3]],["result",4,[["error",3]]]],null,[[]]],"p":[[3,"Args"]]},\
"hopper_rust":{"doc":"Hopper Rust","t":[0,0,0,0,0,0,0,0,0,0,3,3,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,2,2,2,0,0,3,8,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,10,11,10,11,10,11,10,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,4,6,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,6,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,3,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,0,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,16,6,8,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,4,13,13,16,3,8,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,0,5,5,5,5,5,13,13,4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,5,5,5,11,11,11,11,11,11,11,11,12,12,12,12,12,8,5,10],"n":["app_config","body_controller","error","hopper_config","ik_controller","lidar","motion_controller","speech","udp_adaptor","utilities","AppConfig","TtsServiceConfig","as_any","as_any","as_any_mut","as_any_mut","audio_repository_path","azure_api_key","borrow","borrow","borrow_mut","borrow_mut","cache_dir_path","clone","clone","clone_into","clone_into","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","fmt","fmt","from","from","from_subset","from_subset","get_configuration","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","tts_service_config","type_id","type_id","vzip","vzip","AsyncBodyController","BodyController","BodyMotorPositions","motor_controller","motor_positions","AsyncBodyController","BodyController","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","move_motors_to","move_motors_to","new","read_mean_voltage","read_mean_voltage","read_motor_positions","read_motor_positions","set_compliance_slope","set_compliance_slope","set_speed","set_speed","set_torque","set_torque","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","BodyMotorPositions","LegMotorPositions","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","coxa","create_commands_for_body","deref","deref_mut","deserialize","drop","eq","femur","fmt","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","ne","new","serialize","tibia","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","AudioCacheDirError","DynamixelDriverError","FailedToCreateAudioOutputStream","FailedToCreateAudioSink","FailedToDecodeAudioFile","GenericIkError","HopperError","HopperResult","IoError","JsonError","LidarError","SetLoggerError","TomlError","TtsError","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","fmt","fmt","from","from","from","from","from","from","from","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","is_recoverable_driver_error","source","to_string","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","0","0","0","0","0","0","0","BodyConfig","HopperConfig","LegConfig","angle_offset","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","coxa_id","coxa_length","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","femur_correction","femur_id","femur_length","femur_offset","fmt","fmt","from","from","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","legs","load","ne","ne","position","save_as_toml","serialize","serialize","tibia_correction","tibia_id","tibia_length","tibia_offset","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","IkControllable","IkController","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","disable_motors","disable_motors","drop","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","leg_positions","move_motors_to","move_to_positions","move_to_positions","new","read_leg_positions","read_leg_positions","read_mean_voltage","read_motor_positions","set_compliance_slope","set_speed","set_torque","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Item","LegPositions","MoveTowards","MovingTowardsIterator","OptionalLegPositions","as_any","as_any_mut","borrow","borrow_mut","cjk_compat_variants","deref","deref_mut","drop","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_iter","is_in_subset","move_towards","move_towards","next","next","nfc","nfd","nfkc","nfkd","stream_safe","to_move_towards_iter","to_move_towards_iter","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","LidarDriver","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","init","into","into_any","into_any_rc","is_in_subset","new","stop","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","BodyState","DanceMove","Grounded","HappyDance","Item","MotionController","RotateTowards","SadEmote","Standing","WaveHi","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","eq","equivalent","fmt","fmt","from","from","from","from_subset","from_subset","from_subset","get_command","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","new","rotate_towards","set_body_state","set_command","set_transformation","set_transformation_euler","stance","start_sequence","to_iterator","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","visualizer","vzip","vzip","vzip","walking","grounded_stance","random_grounded_stance","relaxed_stance","relaxed_wide_stance","save_basic","ChessBoard","Circles","GroundType","HopperVisualizer","Squares","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","default","deref","deref","deref_mut","deref_mut","disable_motors","drop","drop","drop","from","from","from_str","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","move_motors_to","move_to_positions","new","read_leg_positions","read_mean_voltage","read_motor_positions","set_compliance_slope","set_speed","set_torque","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","MoveCommand","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","direction","drop","eq","fmt","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","ne","new","rotation","serialize","should_move","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Angry","AzureVoiceStyle","Cheerful","Plain","Sad","SpeechService","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","default","deref","deref","deref_mut","deref_mut","deserialize","drop","drop","drop","fmt","from","from","from_subset","from_subset","init","init","into","into","into_any","into_any","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","new","pause","play_sound","random_astromech_noise","resume","say_astromech","say_azure","say_azure_with_style","serialize","stop","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","volume","vzip","vzip","ControllerData","a_down","as_any","as_any_mut","b_down","body_pitch","body_roll","body_yaw","borrow","borrow_mut","default","deref","deref_mut","deserialize","drop","fmt","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","rotation_as_quaternion","serialize","to_json_bytes","to_subset","to_subset_unchecked","translation_x","translation_y","translation_z","try_from","try_into","type_id","udp_controller_handler","udp_ik_commander","udp_motor_commander","vzip","was_a_pressed","was_b_pressed","was_x_pressed","was_y_pressed","with_move","with_rotation","with_translation","x","x_down","y","y_down","yaw","MpscChannelHelper","start_loggers","try_recv_optional"],"q":["hopper_rust","","","","","","","","","","hopper_rust::app_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::body_controller","","","","","hopper_rust::body_controller::motor_controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::body_controller::motor_positions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::error","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::error::HopperError","","","","","","","hopper_rust::hopper_config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::ik_controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::ik_controller::leg_positions","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::lidar","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::motion_controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::motion_controller::stance","","","","","hopper_rust::motion_controller::visualizer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::motion_controller::walking","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::speech","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::udp_adaptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hopper_rust::utilities","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Use default config if no path is provided","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Initializes loggers",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,2,2,2,1,2,1,2,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,0,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,2,1,1,2,1,2,0,0,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,3,4,3,4,3,4,3,4,3,4,3,3,3,3,3,3,3,0,0,5,5,5,5,5,5,5,0,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,8,9,10,11,12,13,0,0,0,14,14,15,14,15,14,15,14,15,14,15,14,15,14,15,15,14,15,14,15,14,15,14,15,14,15,14,14,15,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,15,15,14,15,14,15,14,15,14,14,15,15,14,15,14,15,14,15,14,15,14,15,14,15,14,15,0,0,16,16,16,16,16,16,17,16,16,16,16,16,16,16,16,16,16,0,16,17,16,16,17,16,16,16,16,16,16,16,16,16,16,16,16,18,0,0,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,18,20,19,19,19,19,19,19,19,18,20,19,19,19,19,19,19,0,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,0,0,22,23,24,0,0,23,22,23,25,23,22,25,23,22,25,23,22,25,23,22,23,22,23,22,22,25,23,22,25,23,22,25,25,23,22,22,22,23,22,25,23,22,25,23,22,25,25,23,22,25,23,22,25,23,22,23,22,25,23,22,25,23,22,25,24,25,25,25,25,0,25,23,23,22,25,23,22,25,23,22,25,23,22,25,23,22,25,23,22,0,25,23,22,0,0,0,0,0,0,26,26,0,0,26,27,26,27,26,27,26,27,26,27,27,26,27,26,27,27,27,26,27,26,26,27,26,27,26,27,26,27,26,27,26,27,26,27,26,27,27,27,27,27,27,27,27,27,27,26,27,26,27,26,27,26,27,26,27,26,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,29,0,29,29,29,0,30,29,30,29,30,29,30,29,29,29,29,30,29,30,29,29,30,30,29,29,30,29,30,29,30,29,30,29,30,29,29,30,29,30,29,30,30,30,30,30,30,30,30,29,30,29,30,29,30,29,30,29,30,29,30,29,30,30,29,0,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,0,31,31,31,31,31,31,31,31,31,31,31,31,31,0,0,32],"f":[null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],null,[[["appconfig",3]],["appconfig",3]],[[["ttsserviceconfig",3]],["ttsserviceconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["appconfig",3]]]],[[],["result",4,[["ttsserviceconfig",3]]]],[[["usize",0]]],[[["usize",0]]],[[["appconfig",3],["formatter",3]],["result",6]],[[["ttsserviceconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],[[["",0]]],[[["option",4,[["pathbuf",3]]]],["result",4,[["appconfig",3],["error",3]]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["",0]]],[[],["usize",0]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],[[["",0],["bodymotorpositions",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["asyncbodycontroller",3],["bodymotorpositions",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["str",0],["bodyconfig",6]],["hopperresult",6,[["asyncbodycontroller",3]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["asyncbodycontroller",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["asyncbodycontroller",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["u8",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["asyncbodycontroller",3],["u8",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["u16",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["asyncbodycontroller",3],["u16",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["bool",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["asyncbodycontroller",3],["bool",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["legmotorpositions",3]],["legmotorpositions",3]],[[["",0],["",0]]],[[["legmotorpositions",3]],["f32",0]],[[["bodyconfig",6],["bodymotorpositions",6]],["vec",3,[["synccommandfloat",3]]]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["legmotorpositions",3]]]],[[["usize",0]]],[[["legmotorpositions",3],["legmotorpositions",3]],["bool",0]],[[["legmotorpositions",3]],["f32",0]],[[["legmotorpositions",3],["formatter",3]],["result",6]],[[]],[[["",0]]],[[],["usize",0]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],[[["legmotorpositions",3],["legmotorpositions",3]],["bool",0]],[[["f32",0],["f32",0],["f32",0]],["legmotorpositions",3]],[[["legmotorpositions",3]],["result",4]],[[["legmotorpositions",3]],["f32",0]],[[["",0]]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[["hoppererror",4],["formatter",3]],["result",6]],[[["hoppererror",4],["formatter",3]],["result",6]],[[]],[[["error",3]],["hoppererror",4]],[[["error",4]],["hoppererror",4]],[[["error",3]],["hoppererror",4]],[[["setloggererror",3]],["hoppererror",4]],[[["rposerror",4]],["hoppererror",4]],[[["ttserror",4]],["hoppererror",4]],[[["dynamixeldrivererror",4]],["hoppererror",4]],[[["",0]]],[[],["usize",0]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],[[["hoppererror",4]],["bool",0]],[[["hoppererror",4]],["option",4,[["error",8]]]],[[["",0]],["string",3]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["legconfig",3]],["legconfig",3]],[[["hopperconfig",3]],["hopperconfig",3]],[[["",0],["",0]]],[[["",0],["",0]]],null,null,[[],["hopperconfig",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["legconfig",3]]]],[[],["result",4,[["hopperconfig",3]]]],[[["usize",0]]],[[["usize",0]]],[[["legconfig",3],["legconfig",3]],["bool",0]],[[["hopperconfig",3],["hopperconfig",3]],["bool",0]],null,null,null,null,[[["legconfig",3],["formatter",3]],["result",6]],[[["hopperconfig",3],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],[[["",0]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],null,[[["path",3]],["result",6,[["hopperconfig",3]]]],[[["legconfig",3],["legconfig",3]],["bool",0]],[[["hopperconfig",3],["hopperconfig",3]],["bool",0]],null,[[["hopperconfig",3],["path",3]],["result",6]],[[["legconfig",3]],["result",4]],[[["hopperconfig",3]],["result",4]],null,null,null,null,[[["",0]]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["ikcontroller",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["usize",0]]],[[]],[[["",0]]],[[],["usize",0]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],null,[[["ikcontroller",3],["bodymotorpositions",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0],["legpositions",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["ikcontroller",3],["legpositions",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["box",3,[["bodycontroller",8]]],["hopperconfig",3]],["box",3,[["ikcontroller",3]]]],[[["",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["ikcontroller",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["ikcontroller",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["ikcontroller",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["ikcontroller",3],["u8",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["ikcontroller",3],["u16",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["ikcontroller",3],["bool",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["replacements",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["",0]]],[[],["usize",0]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[]],[[["",0]],["bool",0]],[[["",0],["",0],["f32",0]]],[[["legpositions",6],["legpositions",6],["f32",0]]],[[["movingtowardsiterator",3,[["point3",6,[["f32",0]]]]]],["option",4]],[[["movingtowardsiterator",3,[["legpositions",6]]]],["option",4]],[[],["recompositions",3]],[[],["decompositions",3]],[[],["recompositions",3]],[[],["decompositions",3]],[[],["streamsafe",3]],[[["",0],["",0],["f32",0]],["movingtowardsiterator",3]],[[["legpositions",6],["legpositions",6],["f32",0]],["movingtowardsiterator",3]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["",0]]],[[],["usize",0]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],[[["str",0]],["hopperresult",6,[["lidardriver",3]]]],[[["lidardriver",3]],["hopperresult",6]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["dancemove",4]],["dancemove",4]],[[["bodystate",4]],["bodystate",4]],[[["",0],["",0]]],[[["",0],["",0]]],[[],["bodystate",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["motioncontroller",3]]],[[["usize",0]]],[[["usize",0]]],[[["usize",0]]],[[["bodystate",4],["bodystate",4]],["bool",0]],[[["",0],["",0]],["bool",0]],[[["dancemove",4],["formatter",3]],["result",6]],[[["bodystate",4],["formatter",3]],["result",6]],[[]],[[]],[[]],[[["",0]]],[[["",0]]],[[["",0]]],[[["motioncontroller",3]],["movecommand",3]],[[],["usize",0]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["box",3,[["ikcontrollable",8]]]],["future",8]],[[["",0],["",0],["f32",0]]],[[["motioncontroller",3],["bodystate",4]]],[[["motioncontroller",3],["movecommand",3]]],[[["motioncontroller",3],["vector3",6,[["f32",0]]],["unitquaternion",6,[["f32",0]]]]],[[["motioncontroller",3],["vector3",6,[["f32",0]]],["vector3",6,[["f32",0]]]]],null,[[["motioncontroller",3],["dancemove",4]]],[[["dancemove",4],["legpositions",6]],["box",3,[["iterator",8]]]],[[["",0]]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],null,[[]],[[]],[[]],null,[[],["legpositions",6]],[[],["legpositions",6]],[[],["legpositions",6]],[[],["legpositions",6]],[[],["hopperresult",6]],null,null,null,null,null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[],["hoppervisualizer",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["hoppervisualizer",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["hoppervisualizer",3]]],[[["usize",0]]],[[["usize",0]]],[[]],[[]],[[["str",0]],["result",6,[["groundtype",4]]]],[[["",0]]],[[["",0]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["hoppervisualizer",3],["bodymotorpositions",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["hoppervisualizer",3],["legpositions",6]],["pin",3,[["box",3,[["future",8]]]]]],[[["groundtype",4]],["hoppervisualizer",3]],[[["hoppervisualizer",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["hoppervisualizer",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["hoppervisualizer",3]],["pin",3,[["box",3,[["future",8]]]]]],[[["hoppervisualizer",3],["u8",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["hoppervisualizer",3],["u16",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["hoppervisualizer",3],["bool",0]],["pin",3,[["box",3,[["future",8]]]]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[]],[[]],null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["movecommand",3]],["movecommand",3]],[[["",0],["",0]]],[[],["movecommand",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["movecommand",3]]]],[[["movecommand",3]],["vector2",6,[["f32",0]]]],[[["usize",0]]],[[["movecommand",3],["movecommand",3]],["bool",0]],[[["movecommand",3],["formatter",3]],["result",6]],[[]],[[["",0]]],[[],["usize",0]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],[[["movecommand",3],["movecommand",3]],["bool",0]],[[["vector2",6,[["f32",0]]],["f32",0]],["movecommand",3]],[[["movecommand",3]],["f32",0]],[[["movecommand",3]],["result",4]],[[["movecommand",3]],["bool",0]],[[["",0]]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[]],null,null,null,null,null,null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["any",8]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["",0]],["",0]],[[["azurevoicestyle",4]],["azurevoicestyle",4]],[[["",0],["",0]]],[[],["azurevoicestyle",4]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["azurevoicestyle",4]]]],[[["speechservice",3]]],[[["usize",0]]],[[["usize",0]]],[[["azurevoicestyle",4],["formatter",3]],["result",6]],[[]],[[]],[[["",0]]],[[["",0]]],[[],["usize",0]],[[],["usize",0]],[[]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],[[["",0]],["bool",0]],[[["string",3],["option",4,[["string",3]]],["option",4,[["string",3]]]],["hopperresult",6,[["speechservice",3]]]],[[["speechservice",3]]],[[["speechservice",3],["str",0]],["future",8]],[[["speechservice",3],["u32",0]],["future",8]],[[["speechservice",3]]],[[["speechservice",3],["str",0]],["future",8]],[[["speechservice",3],["str",0]],["future",8]],[[["speechservice",3],["str",0],["azurevoicestyle",4]],["future",8]],[[["azurevoicestyle",4]],["result",4]],[[["speechservice",3]]],[[["",0]]],[[["",0]],["option",4]],[[["",0]],["option",4]],[[["",0]]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["",0]],["typeid",3]],[[["speechservice",3],["f32",0]]],[[]],[[]],null,null,[[["",0]],["any",8]],[[["",0]],["any",8]],null,null,null,null,[[["",0]],["",0]],[[["",0]],["",0]],[[],["controllerdata",3]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[],["result",4,[["controllerdata",3]]]],[[["usize",0]]],[[["controllerdata",3],["formatter",3]],["result",6]],[[]],[[["",0]]],[[],["usize",0]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[["",0]],["bool",0]],[[["controllerdata",3]],["unitquaternion",6,[["f32",0]]]],[[["controllerdata",3]],["result",4]],[[["controllerdata",3]],["hopperresult",6,[["vec",3,[["u8",0]]]]]],[[["",0]],["option",4]],[[["",0]]],null,null,null,[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["motioncontroller",3]],["future",8]],[[["box",3,[["ikcontrollable",8]]]],["future",8]],[[["box",3,[["bodycontroller",8]]]],["future",8]],[[]],[[["controllerdata",3],["controllerdata",3]],["bool",0]],[[["controllerdata",3],["controllerdata",3]],["bool",0]],[[["controllerdata",3],["controllerdata",3]],["bool",0]],[[["controllerdata",3],["controllerdata",3]],["bool",0]],[[["f32",0],["f32",0],["f32",0],["bool",0],["bool",0],["bool",0],["bool",0]],["controllerdata",3]],[[["f32",0],["f32",0],["f32",0],["bool",0],["bool",0],["bool",0],["bool",0]],["controllerdata",3]],[[["f32",0],["f32",0],["f32",0],["bool",0],["bool",0],["bool",0],["bool",0]],["controllerdata",3]],null,null,null,null,null,null,[[["option",4,[["string",3]]],["u8",0]],["hopperresult",6]],[[["",0]],["result",4,[["option",4],["tryrecverror",4]]]]],"p":[[3,"AppConfig"],[3,"TtsServiceConfig"],[3,"AsyncBodyController"],[8,"BodyController"],[3,"LegMotorPositions"],[4,"HopperError"],[13,"DynamixelDriverError"],[13,"IoError"],[13,"TomlError"],[13,"JsonError"],[13,"SetLoggerError"],[13,"LidarError"],[13,"TtsError"],[3,"LegConfig"],[3,"HopperConfig"],[3,"IkController"],[8,"IkControllable"],[8,"MoveTowards"],[3,"MovingTowardsIterator"],[6,"LegPositions"],[3,"LidarDriver"],[4,"BodyState"],[4,"DanceMove"],[8,"RotateTowards"],[3,"MotionController"],[4,"GroundType"],[3,"HopperVisualizer"],[3,"MoveCommand"],[4,"AzureVoiceStyle"],[3,"SpeechService"],[3,"ControllerData"],[8,"MpscChannelHelper"]]},\
"remote_controller":{"doc":"","t":[3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11],"n":["Args","as_any","as_any_mut","augment_args","augment_args_for_update","borrow","borrow_mut","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","from_subset","init","into","into_any","into_any_arc","into_any_rc","into_app","into_app_for_update","is_in_subset","main","target","to_subset","to_subset_unchecked","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","vzip"],"q":["remote_controller","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Visualize Hopper","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","addr:port of target","","","","","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1],"f":[null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["command",6]],["command",6]],[[["command",6]],["command",6]],[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["argmatches",3]],["result",4,[["args",3],["error",3]]]],[[["argmatches",3]],["result",4,[["args",3],["error",3]]]],[[["",0]]],[[],["usize",0]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["command",6]],[[],["command",6]],[[["",0]],["bool",0]],[[],["result",6]],null,[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["args",3],["argmatches",3]],["result",4,[["error",3]]]],[[["args",3],["argmatches",3]],["result",4,[["error",3]]]],[[]]],"p":[[3,"Args"]]},\
"visualizer":{"doc":"","t":[3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,11],"n":["Args","as_any","as_any_mut","augment_args","augment_args_for_update","body_config","borrow","borrow_mut","deref","deref_mut","drop","from","from_arg_matches","from_arg_matches_mut","from_subset","ground","init","into","into_any","into_any_arc","into_any_rc","into_app","into_app_for_update","is_in_subset","main","to_subset","to_subset_unchecked","try_from","try_into","type_id","update_from_arg_matches","update_from_arg_matches_mut","verbose","vzip"],"q":["visualizer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Visualize Hopper","","","","","Sets path to body config file (.yaml) If unset uses â€¦","","","","","","Returns the argument unchanged.","","","","type of floor to draw in visualizer","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Sets the level of verbosity",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1,1,1,1],"f":[null,[[["",0]],["any",8]],[[["",0]],["any",8]],[[["command",6]],["command",6]],[[["command",6]],["command",6]],null,[[["",0]],["",0]],[[["",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]],["",0]],[[["usize",0]]],[[]],[[["argmatches",3]],["result",4,[["args",3],["error",3]]]],[[["argmatches",3]],["result",4,[["args",3],["error",3]]]],[[["",0]]],null,[[],["usize",0]],[[]],[[["box",3,[["global",3]]]],["box",3,[["any",8],["global",3]]]],[[["arc",3]],["arc",3,[["any",8]]]],[[["rc",3]],["rc",3,[["any",8]]]],[[],["command",6]],[[],["command",6]],[[["",0]],["bool",0]],[[],["result",6]],[[["",0]],["option",4]],[[["",0]]],[[],["result",4]],[[],["result",4]],[[["",0]],["typeid",3]],[[["args",3],["argmatches",3]],["result",4,[["error",3]]]],[[["args",3],["argmatches",3]],["result",4,[["error",3]]]],null,[[]]],"p":[[3,"Args"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
